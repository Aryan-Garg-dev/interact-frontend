import { USER_PROFILE_PIC_URL } from '@/config/routes';
import { Application } from '@/types';
import moment from 'moment';
import Image from 'next/image';
import React from 'react';
import ToolTip from '../utils/tooltip';
import { getApplicationStatus, getApplicationStatusColor } from '@/utils/funcs/application';

interface Props {
  applications: Application[];
  setClickedOnApplication: React.Dispatch<React.SetStateAction<boolean>>;
  setClickedApplicationID: React.Dispatch<React.SetStateAction<number>>;
}

const ApplicationsTable = ({ applications, setClickedOnApplication, setClickedApplicationID }: Props) => {
  return (
    <div className="w-full flex flex-col gap-2 px-8">
      <div className="w-full h-12 bg-white rounded-xl border-gray-400 flex font-semibold text-primary_black">
        <div className="w-[35%] flex-center">Name</div>
        <div className="w-[15%] flex-center relative group">
          <ToolTip
            content="Generated by AIâœ¨"
            styles={{
              fontSize: '10px',
              padding: '4px',
              width: '140px',
              top: '50%',
              left: '50%',
              translate: '-50% -50%',
              border: 'none',
            }}
          />
          Score
        </div>
        <div className="w-[15%] flex-center">Conversations</div>
        <div className="w-[15%] flex-center">Status</div>
        <div className="w-[20%] flex-center">Applied On</div>
      </div>
      {applications.map((application, index) => (
        <div
          key={application.id}
          onClick={() => {
            setClickedApplicationID(index);
            setClickedOnApplication(true);
          }}
          className="w-full h-12 bg-white rounded-xl border-gray-400 flex text-sm text-primary_black transition-ease-300 cursor-pointer"
        >
          <div className="w-[35%] flex-center gap-1 px-4">
            <Image
              crossOrigin="anonymous"
              width={50}
              height={50}
              alt={'User Pic'}
              src={`${USER_PROFILE_PIC_URL}/${application.user.profilePic}`}
              className="w-8 h-8 rounded-full z-[1]"
            />
            <div className="w-[calc(100%-32px)] flex items-center flex-wrap gap-1">
              <div className="font-medium text-base line-clamp-1">{application.user.name}</div>
              <div className="text-xs">@{application.user.username}</div>
            </div>
          </div>
          <div className="w-[15%] flex-center">
            {application.score != -1 ? (
              <div className="text-gradient font-semibold">{(application.score * 100).toFixed(2)}%</div>
            ) : (
              '-'
            )}
          </div>
          <div className="w-[15%] flex-center">{application.noComments}</div>
          <div className="w-[15%] flex-center gap-1 px-4">
            <div
              className="w-fit px-3 py-1 text-xs font-medium rounded-full"
              style={{ backgroundColor: getApplicationStatusColor(application.status) }}
            >
              {getApplicationStatus(application.status)}
            </div>
          </div>
          <div className="w-[20%] flex-center">{moment(application.createdAt).format('DD MMMM, YYYY')}</div>
        </div>
      ))}
    </div>
  );
};

export default ApplicationsTable;
